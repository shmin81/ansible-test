---
# tasks file for make_besu_config

- name: Ensure configuration
  block:
    - fail:
        msg: You must set "is_boot_node" for this role to run
      when: is_boot_node is not defined
    - fail:
        msg: You must set "besu_user" for this role to run
      when: besu_user is not defined
    - fail:
        msg: You must set "besu_group" for this role to run
      when: besu_group is not defined
    - fail:
        msg: You cannot use macOS for this role to run
      when: ansible_os_family == "Darwin"
  when: True

- name: check besu {{ inventory_hostname }}
  #command: '{{ besu_current_dir }}/bin/besu --version'
  command: '{{ besu_exec_binary }} --version'
  register: besu_version_infos

- name: print besu version
  debug: 
    var: besu_version_infos.stdout

- name: Create configuration directory
  file:
    path: "{{ besu_config_dir }}"
    state: directory
    owner: "{{ besu_user }}"
    group: "{{ besu_group }}"
    recurse: yes
  become: true

- name: Generate genesis config file
  template:
    src: "{{ besu_genesis_config_template }}"
    dest: "{{ besu_config_dir }}/ibftConfigFile.json"
    owner: "{{ besu_user }}"
    group: "{{ besu_group }}"
    mode: 0644
  become: true
  register: config_json

- name: make besu genesis and nodekey
  include: genesis.yml
  #become: true
  #when: config_json is changed
  when: (roll_option == 'all' or roll_option == 'genesis') and
    (config_json is changed or force == True)   

- name: make besu config
  include: config.yml
  #become: true
  #when: config_json is changed
  when: (roll_option == 'all' or roll_option == 'config') and
    (config_json is changed or force == True) 


- name: Create Besu service (but not run)
  include_tasks: "service.yml"


# - name: find node key
#   find:
#     paths: "{{ besu_config_dir }}/node"
#     file_type: file
#     excludes: 
#       - genesis.json
#       - key.pub
#     #use_regex: yes
#     recurse: yes
#   register: file_infos

# - name: print besu key
#   debug: 
#     var: file_infos

# - name: make besu genesis and nodekey
#   block:
#   - name: download besu
#     apt: name=software-properties-common update_cache=yes 

#   - name: Add an Apt signing key, uses whichever key is at the URL
#     apt_key: 
#       url: "{{ openjdk_apt_key_url }}"

#   - name: Add APT repository for 'AdoptOpenJDK'
#     shell: |
#       add-apt-repository --yes {{ openjdk_apt_repo }}
#     args:
#       executable: /bin/bash

#   - name: install jdk package
#     apt: name={{ openjdk_name }} update_cache=yes 

#   environment: "{{ env|d({}) }}"
#   when: besu_versions.rc != 1
#   become: true
